#!/usr/bin/env python3
from ISPProgrammer import LPC80x, LPC84x
import click

INSTALLED_FAMILIES = (
    LPC80x, 
    LPC84x
)

LPC175_6X_FAMILY = (
    'LPC1769',
    'LPC1768',
    'LPC1767',
    'LPC1766',
    'LPC1765', 
    'LPC1764',
    'LPC1763',
    'LPC1759',
    'LPC1758',
    'LPC1757',
    'LPC1756',
    'LPC1755',
    'LPC1754',
    'LPC1753',        
)
        
CHIPS = []
for family in INSTALLED_FAMILIES:
    CHIPS.extend(family.Family)

@click.group()
def gr1():
    pass


@click.option('--chipname', '-c', type = click.Choice(CHIPS), required = True, help='Chip Type')
@gr1.command()
def SetupChip(chipname):
    chip = None
    if chipname in LPC80x.Family:
        chip = LPC80x()

    elif chipname in LPC84x.Family:
        chip = LPC84x()

    else:
        raise UserWarning("Chip %s unknown"%chipname)

    chip.InitConnection()
    print("Initiated %s"%chipname)
    
    return chip

@click.option('--chipname', '-c', type = click.Choice(CHIPS), required = True, help='Chip Type')
@gr1.command()
def MassErase(chipname):
    chip = SetupChip(chipname)
    chip.MassErase()
    print("Mass Erase Successful")

if __name__ == "__main__":
    gr1()
